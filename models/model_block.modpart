//********************************************************
// HOUSEHOLD DECISIONS - 10 equations
//********************************************************

// Steady state values
omega = STEADY_STATE(omega);
Cgss = Cgy * STEADY_STATE(yt);
Igss = Igy * STEADY_STATE(yt);
Cgess = Cgey * STEADY_STATE(yt);
Cgrdss = Cgrdy * STEADY_STATE(yt);
Rss = STEADY_STATE(R);
ydss = STEADY_STATE(yd);
muyH = STEADY_STATE(muyH);
shockchitss = STEADY_STATE(shockchit);  // Exogenous disturbance to R&D Tech
kappaprob = STEADY_STATE(kappaprob);

// Marginal Utility
1/C = lambda * (1 + tauc);

// Euler equation 
lambda = betta * (lambda(+1) / ZZ(+1) * R / PI(+1));

// Labor decision
omega * (Lab + E)^phi = lambda * W_real * H(-1) * (1 - tauw);

// Law of motion of private capital
Kp * ZZ = (1 - delta) * Kp(-1) + Ip;

// Return on investment - Choose private capital
1 = betta * (lambda(+1) / lambda / ZZ(+1) * (1 - delta + rk(+1)));

// Human capital of Household: H = (1-delta)*H(-1) + E^muy * (Kge/At)^alphaH
H = (1 - deltaH) * H(-1) + muyH * E^muy * (Kge(-1))^alphaH;

// Time for human capital build: E 
omega * (Lab + E)^phi = lambda_HC * muyH * muy * E^(muy-1) * (Kge(-1))^alphaH;

// Human capital value
lambda_HC = betta * (lambda(+1) * (1 - tauw(+1)) * W_real(+1) * Lab(+1) + 
                     lambda_HC(+1) * (1 - deltaH));

// Effective labor
N + Ns = Lab * H(-1);

// Effective labor in the R&D
Ns = (1 - AAt(-1) / ZZRD(-1)) * SAt + SSt;


//********************************************************
// FIRMS DECISIONS - 17 equations
//********************************************************

// Firm's price setting
g1 = lambda * mc * yd + betta * thetap * (PI^chi / PI(+1))^(-epsilon) * g1(+1);
g2 = lambda * PIstar * yd + betta * thetap * (PI^chi / PI(+1))^(1-epsilon) * 
     PIstar / PIstar(+1) * g2(+1);
epsilon * g1 = (epsilon - 1) * g2;

// Optimal inputs
Kp(-1) / N = alppha / (1 - alppha) * W_real / rk;

// Marginal cost
(1 - alppha) * mc * yt / N = markupss * W_real;

// Law of motion prices
1 = thetap * (PI(-1)^chi / PI)^(1-epsilon) + (1 - thetap) * PIstar^(1-epsilon);

// Production function
yt = AAt(-1)^(varthetaat-1) * (Kg(-1)^zeta) * (Kp(-1)^alppha) * (N^(1-alppha)) - Bigtheta;

// Ideas development 
(1 + gammaa) * ZZRD = shockchit * ZZRD(-1) * SSt^alphaSRD * Cgrd^alphaRD + phiob * ZZRD(-1);

// How much labor to use in research
SDF(+1) * JZt(+1) * shockchit * ZZRD(-1) / ZZRD / (1 + gammaa) * 
SSt^(alphaSRD-1) * Cgrd^alphaRD = W_real;

// How much labor to use in adoption
JZt = -SAt * W_real + phiob * (SDF(+1) / (1 + gammaa) * 
      (probadopt * VA(+1) * ZZRD(-1) / AAt + (1 - probadopt) * JZt(+1) * ZZRD(-1) / ZZRD));

// Probability of Adoption
probadopt = kappaprob * (SAt)^rhoSADOPT;

// Adoption dynamics
(1 + gammaa) * AAt = probadopt * phiob * (ZZRD(-1) - AAt(-1)) + phiob * AAt(-1);

// Value of Adoption
VA = (markupss - 1) / markupss * mc * yt + 
     phiob * SDF(+1) * VA(+1) * AAt(-1) / AAt / (1 + gammaa);

// FOC adoption
rhoSADOPT * probadopt * phiob * SDF(+1) / (1 + gammaa) * 
(VA(+1) * ZZRD(-1) / AAt - JZt(+1) * AAt / AAt(-1)) = SAt * W_real;

// Stochastic Discount factor (After detrend)
SDF = betta * lambda / lambda(-1);

// Shock to the R&D
log(shockchit) = (1 - rhoshockchit) * log(shockchitss) + 
                 rhoshockchit * log(shockchit(-1)) + epsi_shockchit;


//********************************************************
// MONETARY AUTHORITY - 2 equations
//********************************************************

// Taylor rule
Rmp / Rss = (Rmp(-1) / Rss)^rho_R * 
            ((PI / Piss)^gamma_pi * (yd / ydss)^gamma_y)^(1 - rho_R) * exp(epsi_MP);

// Link between borrowing cost of government and policy rate
log(R) = rho_RG * R(-1) + (1 - rho_RG) * (log(Rmp) + Delta_G * (by(-1) - byss)) + epsi_spread;

Delta_G = prob_def * Deltacost;
prob_def = exp(eta1 + eta2 * by(-1)) / (1 + exp(eta1 + eta2 * by(-1)));


//********************************************************
// GOVERNMENT DECISIONS - 7 equations
//********************************************************

// Public capital
Kg * ZZ = (1 - delta) * Kg(-1) + effshock * Ig;

// Debt equation
Bt = (R(-1) / PI) * Bt(-1) / ZZ + Cg + Ig + Cge + Cgrd + Trans - 
     tauw * W_real * N - tauc * C;

// Lump-sum Transfer 
Trans - STEADY_STATE(Trans) = rho_trans * (Trans(-1) - STEADY_STATE(Trans)) + 
                              (1 - rho_trans) * (-gamma_d_trans * (by(-1) - byss) * ydss);

// Debt to GDP ratio
by = Bt / yt;

// Government Investment dynamics
Ig = Igss + ydss * epsi_ig;

// Government Consumption dynamics
Cg - Cgss = -(Ig - Igss + Cge - Cgess + Cgrd - Cgrdss);

// Consumption tax
tauc - taucss = rho_tauc * (tauc(-1) - taucss) + 
                (1 - rho_tauc) * (gamma_d_tauc * (by(-1) - byss)) + epsi_tauc;

// Income tax 
tauw - tauwss = rho_tauw * (tauw(-1) - tauwss) + 
                (1 - rho_tauw) * (gamma_d_tauw * (by(-1) - byss)) + epsi_tauw;

// Public Human-related capital stock
Kge * ZZ = (1 - delta) * Kge(-1) + effgeshock * Cge;

// Government Education/Human Capital Spending dynamics
Cge = Cgess + ydss * epsi_cge;

// R&D Spending
Cgrd = Cgrdss + ydss * epsi_cgrd;


//********************************************************
// MARKET CLEARING - 3 equations
//********************************************************

// Aggregate Demand
[name = 'yd']
yd = C + Ip + Ig + Cg + Cge + Cgrd;

// Aggregate production
yt = vp * yd;

// Price dispersion
vp = thetap * (PI(-1)^chi / PI)^(-epsilon) * vp(-1) + (1 - thetap) * PIstar^(-epsilon);


//********************************************************
// SHOCK DYNAMICS - 2 equations
//********************************************************

// Technology shock
log(ZZ) = (1 - rho_ZZ) * log(ZZ(-1)) + rho_ZZ * (log(ZZss)) + epsi_ZZ;

// Efficiency of human-related spending
effgeshock - effge = rhoeffge * (effgeshock(-1) - effge) + epsi_effge;

// Efficiency of infrastructure spending
effshock - eff = rhoeff * (effshock(-1) - eff) + epsi_eff;


//********************************************************
// VARIABLES OF INTEREST
//********************************************************

// Log output (in percent)
lnyd = log(yd) * 100;

// Primary deficit (as % of GDP)
pdef = (Cg + Ig + Cge + Cgrd + Trans - tauw * W_real * N - tauc * C) / yt * 100;

// Government investment (as % of steady state GDP)
Ig_ys = Ig / ydss * 100;

// Debt-to-GDP ratio (annualized, in percent)
by_ann = by / 4 * 100;

// Log inflation (in percent)
lnPI = log(PI) * 100;

// Output growth rate
ygrowth = log(yd / yd(-1)) * 100 + log(ZZ) * 100;